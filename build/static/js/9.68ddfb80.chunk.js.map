{"version":3,"sources":["pre/request.js","pre/config.js","views/home/index.js"],"names":["Axios","method","data","url","a","options","axios","rdata","status","Root","Home","useState","assetList","setAssetList","pageStart","setPageStart","pageLimit","pageCount","setPageCount","btcChartData","name","useEffect","sendData","start","limit","convert","Number","count","toFixed","fetchData","handleChange","event","value","getName","btcChartOptions","chart","toolbar","show","sparkline","enabled","colors","stroke","width","curve","xaxis","categories","i","push","Fragment","Grid","container","spacing","item","md","Card","className","CardContent","Box","AttachMoney","Typography","variant","AccountBalanceWallet","Pagination","color","boundaryCount","onChange","map","src","img","alt","usdt","crypto","currency","price","time","series","type","height","Button"],"mappings":"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","file":"static/js/9.68ddfb80.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst Axios = async (method, data, url) => {\r\n    const options = {\r\n        method,\r\n        url,\r\n        data\r\n    };\r\n    let rdata = await axios(options);\r\n    if (rdata.status === 200 && rdata.data) {\r\n        return rdata.data\r\n    } else {\r\n        return { status: false }\r\n    }\r\n}\r\n\r\nexport default Axios","export const Root = {\r\n    adminUrl: \"https://dependex.com/\"\r\n    // adminUrl: \"http://localhost:3000/\"\r\n}","import React, { useState, useEffect } from \"react\"\r\nimport Box from '@material-ui/core/Box'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { AttachMoney, AccountBalanceWallet } from \"@material-ui/icons\"\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Chart from 'react-apexcharts'\r\nimport Axios from \"../../pre/request\"\r\nimport { Root } from \"../../pre/config\"\r\n\r\nexport default function Home() {\r\n\r\n    const [assetList, setAssetList] = useState([]);\r\n    const [pageStart, setPageStart] = useState(1);\r\n    const [pageLimit] = useState(10);\r\n    const [pageCount, setPageCount] = useState(10);\r\n\r\n    const btcChartData = [\r\n        {\r\n            name: 'Price:',\r\n            data: [47, 45, 52, 56, 24, 65, 32, 38, 54, 56, 45, 32]\r\n        }\r\n    ]\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let sendData = {\r\n                start: pageStart,\r\n                limit: pageLimit,\r\n                convert: \"USD\"\r\n            }\r\n            let data = await Axios(\"POST\", sendData, Root.adminUrl + \"admin/api/getAssets\");\r\n            if (data.status === true) {\r\n                setPageCount(Number((data.count / pageLimit).toFixed()))\r\n                setAssetList(data.data);\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [pageStart, pageLimit])\r\n\r\n    const handleChange = (event, value) => {\r\n        setPageStart((pageLimit * (value - 1)) + 1)\r\n    }\r\n\r\n    const getName = (name) => {\r\n        let btcChartOptions = {\r\n            chart: {\r\n                toolbar: {\r\n                    show: false\r\n                },\r\n                sparkline: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            colors: ['#f4772e'],\r\n            stroke: {\r\n                width: 2,\r\n                curve: 'smooth'\r\n            },\r\n            xaxis: {\r\n                categories: [\r\n                ]\r\n            }\r\n        }\r\n        for (let i = 0; i < 100; i++) {\r\n            btcChartOptions.xaxis.categories.push(name)\r\n        }\r\n        return btcChartOptions;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container spacing={3}>\r\n                <Grid item md={6}>\r\n                    <Card className=\"bg-transparent box-shadow-none home-border-item\">\r\n                        <CardContent className=\"d-flex align-items-center\">\r\n                            <Box className=\"home-balance-icon-p d-flex justify-content-center align-items-center\">\r\n                                <AttachMoney className=\"home-balance-icon\" />\r\n                            </Box>\r\n                            <Box className=\"ml-1\">\r\n                                <Typography variant=\"h5\" className=\"font-weight-bold home-balance-type\">Crypto Balance</Typography>\r\n                                <Typography variant=\"h5\" className=\"home-balance-money\">$ 0.00</Typography>\r\n                            </Box>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item md={6}>\r\n                    <Card className=\"bg-transparent box-shadow-none home-border-item\">\r\n                        <CardContent className=\"d-flex align-items-center\">\r\n                            <Box className=\"home-balance-icon-p d-flex justify-content-center align-items-center\">\r\n                                <AccountBalanceWallet className=\"home-balance-icon\" />\r\n                            </Box>\r\n                            <Box className=\"ml-1\">\r\n                                <Typography variant=\"h5\" className=\"font-weight-bold home-balance-type\">Save & Earn Balance</Typography>\r\n                                <Typography variant=\"h5\" className=\"home-balance-money\">$ 0.00</Typography>\r\n                            </Box>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n            <Box className=\"d-flex justify-content-end p-1\">\r\n                <Pagination count={pageCount} color=\"primary\" boundaryCount={2} onChange={handleChange} />\r\n            </Box>\r\n            {\r\n                assetList.map((item, i) => (\r\n                    <Grid key={i} container spacing={3}>\r\n                        <Grid item md={3}>\r\n                            <Card className=\"bg-transparent box-shadow-none home-border-item\">\r\n                                <CardContent className=\"home-card-content\">\r\n                                    <Box className=\"d-flex align-items-center\">\r\n                                        <Box className=\"home-currency-icon-p d-flex justify-content-center align-items-center\">\r\n                                            <img src={item.img} alt=\"\" className=\"home-balance-icon\" />\r\n                                        </Box>\r\n                                        <Typography variant=\"h5\" className=\"home-balance-type font-weight-bold\">{item.name}</Typography>\r\n                                    </Box>\r\n                                    <Box className=\"ml-2\">\r\n                                        <Typography variant=\"h5\" className=\"font-weight-bold home-balance-type\">${item.usdt}</Typography>\r\n                                        <Typography variant=\"h6\" className=\"home-balance-money\">{item.crypto}{item.currency}</Typography>\r\n                                    </Box>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item md={9}>\r\n                            <Card className=\"bg-transparent box-shadow-none home-border-item\">\r\n                                <CardContent className=\"home-card-content d-flex\">\r\n                                    <Grid container>\r\n                                        <Grid item md={2}>\r\n                                            <Typography variant=\"h6\" className=\"home-balance-money\">{item.currency} Price</Typography>\r\n                                            <Typography variant=\"h5\" className=\"font-weight-bold home-balance-type\">${item.price}</Typography>\r\n                                            <Typography variant=\"h6\" className=\"home-balance-money\">{item.time}</Typography>\r\n                                        </Grid>\r\n                                        <Grid item md={8}>\r\n                                            <Chart\r\n                                                options={getName(item.name)}\r\n                                                series={btcChartData}\r\n                                                type=\"line\"\r\n                                                height={100}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item md={2} className=\"d-flex justify-content-center align-items-center\">\r\n                                            <Button className=\"theme-full-btn color-white\" variant=\"contained\"> Buy </Button>\r\n                                            <Button className=\"theme-empty-btn\" variant=\"contained\"> Swap </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                ))\r\n            }\r\n            <Box className=\"d-flex justify-content-end p-1\">\r\n                <Pagination count={pageCount} color=\"primary\" boundaryCount={2} onChange={handleChange} />\r\n            </Box>\r\n        </React.Fragment>\r\n    )\r\n}"],"sourceRoot":""}